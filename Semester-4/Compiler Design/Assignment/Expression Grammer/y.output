Terminals unused in grammar

    '-'
    '/'


Grammar

    0 $accept: E $end

    1 E: E '+' T
    2  | T

    3 T: T '*' F
    4  | F

    5 F: '(' E ')'
    6  | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5
    ')' (41) 5
    '*' (42) 3
    '+' (43) 1
    '-' (45)
    '/' (47)
    error (256)
    ID (258) 6


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    E (11)
        on left: 1 2
        on right: 0 1 5
    T (12)
        on left: 3 4
        on right: 1 2 3
    F (13)
        on left: 5 6
        on right: 3 4


State 0

    0 $accept: • E $end
    1 E: • E '+' T
    2  | • T
    3 T: • T '*' F
    4  | • F
    5 F: • '(' E ')'
    6  | • ID

    ID   shift, and go to state 1
    '('  shift, and go to state 2

    E  go to state 3
    T  go to state 4
    F  go to state 5


State 1

    6 F: ID •

    $default  reduce using rule 6 (F)


State 2

    1 E: • E '+' T
    2  | • T
    3 T: • T '*' F
    4  | • F
    5 F: • '(' E ')'
    5  | '(' • E ')'
    6  | • ID

    ID   shift, and go to state 1
    '('  shift, and go to state 2

    E  go to state 6
    T  go to state 4
    F  go to state 5


State 3

    0 $accept: E • $end
    1 E: E • '+' T

    $end  shift, and go to state 7
    '+'   shift, and go to state 8


State 4

    2 E: T •  [$end, '+', ')']
    3 T: T • '*' F

    '*'  shift, and go to state 9

    $default  reduce using rule 2 (E)


State 5

    4 T: F •

    $default  reduce using rule 4 (T)


State 6

    1 E: E • '+' T
    5 F: '(' E • ')'

    '+'  shift, and go to state 8
    ')'  shift, and go to state 10


State 7

    0 $accept: E $end •

    $default  accept


State 8

    1 E: E '+' • T
    3 T: • T '*' F
    4  | • F
    5 F: • '(' E ')'
    6  | • ID

    ID   shift, and go to state 1
    '('  shift, and go to state 2

    T  go to state 11
    F  go to state 5


State 9

    3 T: T '*' • F
    5 F: • '(' E ')'
    6  | • ID

    ID   shift, and go to state 1
    '('  shift, and go to state 2

    F  go to state 12


State 10

    5 F: '(' E ')' •

    $default  reduce using rule 5 (F)


State 11

    1 E: E '+' T •  [$end, '+', ')']
    3 T: T • '*' F

    '*'  shift, and go to state 9

    $default  reduce using rule 1 (E)


State 12

    3 T: T '*' F •

    $default  reduce using rule 3 (T)
